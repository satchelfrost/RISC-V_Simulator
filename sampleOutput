				imm[11:0]	rs1	funct3	rd	opcode
Machine instruction:		000000001101	00011	000	00101	0000011
Assembly:			lb rd, imm(rs1)
Source register (rs1):		x3 = 9
Source reg. bin. (rs1):		x3 = 00000000 00000000 00000000 00001001
Destination register (rd):	x5 = 0 (before instruction)
offset (imm):			13
memory[x3 + imm + 0]:		10000011
rd after instruction:		x5 = -125
rd after instr. binary:		x5 = 11111111 11111111 11111111 10000011


				imm[11:0]	rs1	funct3	rd	opcode
Machine instruction:		000000001101	00011	001	00101	0000011
Assembly:			lh rd, imm(rs1)
Source register (rs1):		x3 = 9
Source reg. bin. (rs1):		x3 = 00000000 00000000 00000000 00001001
Destination register (rd):	x5 = 0 (before instruction)
offset (imm):			13
memory[x3 + imm + 0]:		00101010
memory[x3 + imm + 1]:		10000100
rd after instruction:		x5 = -31702
rd after instr. binary:		x5 = 11111111 11111111 10000100 00101010


				imm[11:0]	rs1	funct3	rd	opcode
Machine instruction:		000000001101	00011	010	00101	0000011
Assembly:			lw rd, imm(rs1)
Source register (rs1):		x3 = 9
Source reg. bin. (rs1):		x3 = 00000000 00000000 00000000 00001001
Destination register (rd):	x5 = 0 (before instruction)
offset (imm):			13
memory[x3 + imm + 0]:		00101010
memory[x3 + imm + 1]:		00101011
memory[x3 + imm + 2]:		00101100
memory[x3 + imm + 3]:		10000101
rd after instruction:		x5 = -2060702934
rd after instr. binary:		x5 = 10000101 00101100 00101011 00101010


				imm[11:0]	rs1	funct3	rd	opcode
Machine instruction:		000000001101	00011	100	00101	0000011
Assembly:			lbu rd, imm(rs1)
Source register (rs1):		x3 = 9
Source reg. bin. (rs1):		x3 = 00000000 00000000 00000000 00001001
Destination register (rd):	x5 = 0 (before instruction)
offset (imm):			13
memory[x3 + imm + 0]:		10000011
rd after instruction:		x5 = 131
rd after instr. binary:		x5 = 00000000 00000000 00000000 10000011


				imm[11:0]	rs1	funct3	rd	opcode
Machine instruction:		000000001101	00011	101	00101	0000011
Assembly:			lhu rd, imm(rs1)
Source register (rs1):		x3 = 9
Source reg. bin. (rs1):		x3 = 00000000 00000000 00000000 00001001
Destination register (rd):	x5 = 0 (before instruction)
offset (imm):			13
memory[x3 + imm + 0]:		00101010
memory[x3 + imm + 1]:		10000100
rd after instruction:		x5 = 33834
rd after instr. binary:		x5 = 00000000 00000000 10000100 00101010


				imm[11:0]	rs1	funct3	rd	opcode
Machine instruction:		000000001101	00011	110	00101	0000011
Assembly:			lwu rd, imm(rs1)
Source register (rs1):		x3 = 9
Source reg. bin. (rs1):		x3 = 00000000 00000000 00000000 00001001
Destination register (rd):	x5 = 0 (before instruction)
offset (imm):			13
memory[x3 + imm + 0]:		00101010
memory[x3 + imm + 1]:		00101011
memory[x3 + imm + 2]:		00101100
memory[x3 + imm + 3]:		10000101
rd after instruction:		x5 = 2234264362
rd after instr. binary:		x5 = 10000101 00101100 00101011 00101010


				imm[11:5]	rs2	rs1	funct3	imm[4:0]	opcode
Machine instruction:		0000101		00101	00011	000	01101		0100011
Assembly:			sb rs2, imm(rs1)
Source register (rs2):		x5 = 1234
Source reg. bin. (rs2):		x5 = 00000000 00000000 00000100 11010010
Source register (rs1):		x3 = 9
Memory offset (imm):		173
x3 + imm:			182
Before Instruction:
memory[x3 + imm + 0]:		11111111
After Instruction:
memory[x3 + imm + 0]:		11010010


				imm[11:5]	rs2	rs1	funct3	imm[4:0]	opcode
Machine instruction:		0000101		00101	00011	001	01101		0100011
Assembly:			sh rs2, imm(rs1)
Source register (rs2):		x5 = 1234
Source reg. bin. (rs2):		x5 = 00000000 00000000 00000100 11010010
Source register (rs1):		x3 = 9
Memory offset (imm):		173
x3 + imm:			182
Before Instruction:
memory[x3 + imm + 0]:		11111111
memory[x3 + imm + 1]:		11111110
After Instruction:
memory[x3 + imm + 0]:		11010010
memory[x3 + imm + 1]:		00000100


				imm[11:5]	rs2	rs1	funct3	imm[4:0]	opcode
Machine instruction:		0000101		00101	00011	010	01101		0100011
Assembly:			sw rs2, imm(rs1)
Source register (rs2):		x5 = 1234
Source reg. bin. (rs2):		x5 = 00000000 00000000 00000100 11010010
Source register (rs1):		x3 = 9
Memory offset (imm):		173
x3 + imm:			182
Before Instruction:
memory[x3 + imm + 0]:		11111111
memory[x3 + imm + 1]:		11111110
memory[x3 + imm + 2]:		11111101
memory[x3 + imm + 3]:		11111100
After Instruction:
memory[x3 + imm + 0]:		11010010
memory[x3 + imm + 1]:		00000100
memory[x3 + imm + 2]:		00000000
memory[x3 + imm + 3]:		00000000


				imm[11:0]	rs1	funct3	rd	opcode
Machine instruction:		000000001101	00011	000	00101	0010011
Assembly:			addi rd, rs1, imm
Source register (rs1):		x3 = 9
Source reg. bin. (rs1):		x3 = 00000000 00000000 00000000 00001001
Destination register (rd):	x5 = 0 (before instruction)
offset (imm):			13
rd after instruction:		x5 = 22
rd after instr. binary:		x5 = 00000000 00000000 00000000 00010110


				imm[11:0]	rs1	funct3	rd	opcode
Machine instruction:		000000001101	00011	010	00101	0010011
Assembly:			slti rd, rs1, imm
Source register (rs1):		x3 = -13
Source reg. bin. (rs1):		x3 = 11111111 11111111 11111111 11110011
Destination register (rd):	x5 = 0 (before instruction)
offset (imm):			13
rd after instruction:		x5 = 1
rd after instr. binary:		x5 = 00000000 00000000 00000000 00000001


				imm[11:0]	rs1	funct3	rd	opcode
Machine instruction:		000000001101	00011	011	00101	0010011
Assembly:			slti rd, rs1, imm
Source register (rs1):		x3 = 4294967283
Source reg. bin. (rs1):		x3 = 11111111 11111111 11111111 11110011
Destination register (rd):	x5 = 0 (before instruction)
offset (imm):			13
rd after instruction:		x5 = 0
rd after instr. binary:		x5 = 00000000 00000000 00000000 00000000


				imm[11:0]	rs1	funct3	rd	opcode
Machine instruction:		000000001101	00011	100	00101	0010011
Assembly:			xori rd, rs1, imm
Source register (rs1):		x3 = 65
Source reg. bin. (rs1):		x3 = 00000000 00000000 00000000 01000001
Destination register (rd):	x5 = 0 (before instruction)
offset (imm):			13
rd after instruction:		x5 = 76
rd after instr. binary:		x5 = 00000000 00000000 00000000 01001100


				imm[11:0]	rs1	funct3	rd	opcode
Machine instruction:		000000001101	00011	110	00101	0010011
Assembly:			ori rd, rs1, imm
Source register (rs1):		x3 = 65
Source reg. bin. (rs1):		x3 = 00000000 00000000 00000000 01000001
Destination register (rd):	x5 = 0 (before instruction)
offset (imm):			13
rd after instruction:		x5 = 77
rd after instr. binary:		x5 = 00000000 00000000 00000000 01001101


				imm[11:0]	rs1	funct3	rd	opcode
Machine instruction:		000000001101	00011	111	00101	0010011
Assembly:			andi rd, rs1, imm
Source register (rs1):		x3 = 4
Source reg. bin. (rs1):		x3 = 00000000 00000000 00000000 00000100
Destination register (rd):	x5 = 0 (before instruction)
offset (imm):			13
rd after instruction:		x5 = 4
rd after instr. binary:		x5 = 00000000 00000000 00000000 00000100


				imm[11:0]	rs1	funct3	rd	opcode
Machine instruction:		000000000100	00011	001	00101	0010011
Assembly:			slli rd, rs1, imm
Source register (rs1):		x3 = 17
Source reg. bin. (rs1):		x3 = 00000000 00000000 00000000 00010001
Destination register (rd):	x5 = 0 (before instruction)
offset (imm):			4
rd after instruction:		x5 = 272
rd after instr. binary:		x5 = 00000000 00000000 00000001 00010000


				imm[11:0]	rs1	funct3	rd	opcode
Machine instruction:		000000000100	00011	101	00101	0010011
Assembly:			srli rd, rs1, imm
Source register (rs1):		x3 = -128
Source reg. bin. (rs1):		x3 = 11111111 11111111 11111111 10000000
Destination register (rd):	x5 = 0 (before instruction)
offset (imm):			4
rd after instruction:		x5 = 268435448
rd after instr. binary:		x5 = 00001111 11111111 11111111 11111000


				imm[11:0]	rs1	funct3	rd	opcode
Machine instruction:		010000000100	00011	101	00101	0010011
Assembly:			srai rd, rs1, imm
Source register (rs1):		x3 = -128
Source reg. bin. (rs1):		x3 = 11111111 11111111 11111111 10000000
Destination register (rd):	x5 = 0 (before instruction)
offset (imm):			4
rd after instruction:		x5 = -8
rd after instr. binary:		x5 = 11111111 11111111 11111111 11111000


				[31:25]	rs2	rs1	funct3	rd	opcode
Machine instruction:		0000000	00100	00011	000	00101	0110011
Assembly:			add rd, rs1, rs2
Source register (rs2):		x4 = 130
Source register (rs1):		x3 = -128
Source reg. bin. (rs1):		x3 = 11111111 11111111 11111111 10000000
Destination register (rd):	x5 = 0 (before instruction)
rd after instruction:		x5 = 2
rd after instr. binary:		x5 = 00000000 00000000 00000000 00000010


				[31:25]	rs2	rs1	funct3	rd	opcode
Machine instruction:		0100000	00100	00011	000	00101	0110011
Assembly:			add rd, rs1, rs2
Source register (rs2):		x4 = 130
Source register (rs1):		x3 = -128
Source reg. bin. (rs1):		x3 = 11111111 11111111 11111111 10000000
Destination register (rd):	x5 = 0 (before instruction)
rd after instruction:		x5 = -258
rd after instr. binary:		x5 = 11111111 11111111 11111110 11111110


				[31:25]	rs2	rs1	funct3	rd	opcode
Machine instruction:		0000000	00100	00011	001	00101	0110011
Assembly:			sll rd, rs1, rs2
Source register (rs2):		x4 = 2
Source register (rs1):		x3 = -128
Source reg. bin. (rs1):		x3 = 11111111 11111111 11111111 10000000
Destination register (rd):	x5 = 0 (before instruction)
rd after instruction:		x5 = -512
rd after instr. binary:		x5 = 11111111 11111111 11111110 00000000


				[31:25]	rs2	rs1	funct3	rd	opcode
Machine instruction:		0000000	00100	00011	010	00101	0110011
Assembly:			slt rd, rs1, rs2
Source register (rs2):		x4 = 2
Source register (rs1):		x3 = -128
Source reg. bin. (rs1):		x3 = 11111111 11111111 11111111 10000000
Destination register (rd):	x5 = 0 (before instruction)
rd after instruction:		x5 = 1
rd after instr. binary:		x5 = 00000000 00000000 00000000 00000001


				[31:25]	rs2	rs1	funct3	rd	opcode
Machine instruction:		0000000	00100	00011	011	00101	0110011
Assembly:			sltu rd, rs1, rs2
Source register (rs2):		x4 = 2
Source register (rs1):		x3 = 4294967168
Source reg. bin. (rs1):		x3 = 11111111 11111111 11111111 10000000
Destination register (rd):	x5 = 0 (before instruction)
rd after instruction:		x5 = 0
rd after instr. binary:		x5 = 00000000 00000000 00000000 00000000


				[31:25]	rs2	rs1	funct3	rd	opcode
Machine instruction:		0000000	00100	00011	100	00101	0110011
Assembly:			xor rd, rs1, rs2
Source register (rs2):		x4 = 4
Source register (rs1):		x3 = 5
Source reg. bin. (rs1):		x3 = 00000000 00000000 00000000 00000101
Destination register (rd):	x5 = 0 (before instruction)
rd after instruction:		x5 = 1
rd after instr. binary:		x5 = 00000000 00000000 00000000 00000001


				[31:25]	rs2	rs1	funct3	rd	opcode
Machine instruction:		0000000	00100	00011	101	00101	0110011
Assembly:			srl rd, rs1, rs2
Source register (rs2):		x4 = 2
Source register (rs1):		x3 = 4294967168
Source reg. bin. (rs1):		x3 = 11111111 11111111 11111111 10000000
Destination register (rd):	x5 = 0 (before instruction)
rd after instruction:		x5 = 1073741792
rd after instr. binary:		x5 = 00111111 11111111 11111111 11100000


				[31:25]	rs2	rs1	funct3	rd	opcode
Machine instruction:		0100000	00100	00011	101	00101	0110011
Assembly:			sra rd, rs1, rs2
Source register (rs2):		x4 = 2
Source register (rs1):		x3 = 4294967168
Source reg. bin. (rs1):		x3 = 11111111 11111111 11111111 10000000
Destination register (rd):	x5 = 0 (before instruction)
rd after instruction:		x5 = -32
rd after instr. binary:		x5 = 11111111 11111111 11111111 11100000


				[31:25]	rs2	rs1	funct3	rd	opcode
Machine instruction:		0000000	00100	00011	110	00101	0110011
Assembly:			or rd, rs1, rs2
Source register (rs2):		x4 = 4
Source register (rs1):		x3 = 5
Source reg. bin. (rs1):		x3 = 00000000 00000000 00000000 00000101
Destination register (rd):	x5 = 0 (before instruction)
rd after instruction:		x5 = 5
rd after instr. binary:		x5 = 00000000 00000000 00000000 00000101


				[31:25]	rs2	rs1	funct3	rd	opcode
Machine instruction:		0000000	00100	00011	111	00101	0110011
Assembly:			and rd, rs1, rs2
Source register (rs2):		x4 = 4
Source register (rs1):		x3 = 5
Source reg. bin. (rs1):		x3 = 00000000 00000000 00000000 00000101
Destination register (rd):	x5 = 0 (before instruction)
rd after instruction:		x5 = 4
rd after instr. binary:		x5 = 00000000 00000000 00000000 00000100


				imm[31:12]		rd	opcode
Machine instruction:		11000000000000000111	00101	0110111
Assembly:			lui rd, imm
Destination register (rd):	x5 = 0 (before instruction)
imm:				786439
rd after instruction:		x5 = -1073713152
rd after instr. binary:		x5 = 11000000 00000000 01110000 00000000


				imm[31:12]		rd	opcode
Machine instruction:		11000000000000000111	00101	0010111
Assembly:			auipc rd, imm
Destination register (rd):	x5 = 0 (before instruction)
imm:				786439
upper imm.			3221254144
upper imm. (bin.)		11000000 00000000 01110000 00000000
PC:				4
PC + upper imm.:		3221254148
rd after instruction:		x5 = -1073713148
rd after instr. binary:		x5 = 11000000 00000000 01110000 00000100


				imm[31:12]		rd	opcode
Machine instruction:		11000000000000000111	00101	1101111
Assembly:			jal rd, imm
Destination register (rd):	x5 = 0 (before instruction)
imm:				-262137
PC (before):			4
PC (after):			-262133
ra				8
rd after instruction:		x5 = 8
rd after instr. binary:		x5 = 00000000 00000000 00000000 00001000


				imm[31:12]		rd	opcode
Machine instruction:		11000000000000011000	00101	1100111
Assembly:			jalr rd, imm
Destination register (rd):	x5 = 0 (before instruction)
imm:				-1024
PC (before):			4
PC (after):			-1021
ra				8
rd after instruction:		x5 = 8
rd after instr. binary:		x5 = 00000000 00000000 00000000 00001000


				imm[11:5]	rs2	rs1	funct3	imm[4:0]	opcode
Machine instruction:		0000000		00111	00011	000	00101		1100011
Assembly:			beq rs1, rs2, imm
Source register (rs2):		x7 = 6
Source register (rs1):		x3 = 6
imm:				5
PC (before):			4
branch target addr.:		9
PC (after):			9


				imm[11:5]	rs2	rs1	funct3	imm[4:0]	opcode
Machine instruction:		0000000		00111	00011	001	00101		1100011
Assembly:			bne rs1, rs2, imm
Source register (rs2):		x7 = 6
Source register (rs1):		x3 = 6
imm:				5
PC (before):			4
branch target addr.:		9
PC (after):			4


				imm[11:5]	rs2	rs1	funct3	imm[4:0]	opcode
Machine instruction:		0000000		00111	00011	100	00101		1100011
Assembly:			blt rs1, rs2, imm
Source register (rs2):		x7 = 6
Source register (rs1):		x3 = -6
imm:				5
PC (before):			4
branch target addr.:		9
PC (after):			9


				imm[11:5]	rs2	rs1	funct3	imm[4:0]	opcode
Machine instruction:		0000000		00111	00011	101	00101		1100011
Assembly:			bge rs1, rs2, imm
Source register (rs2):		x7 = -6
Source register (rs1):		x3 = 6
imm:				5
PC (before):			4
branch target addr.:		9
PC (after):			9


				imm[11:5]	rs2	rs1	funct3	imm[4:0]	opcode
Machine instruction:		0000000		00111	00011	110	00101		1100011
Assembly:			bltu rs1, rs2, imm
Source register (rs2):		x7 = 6
Source register (rs1):		x3 = 4294967290
imm:				5
PC (before):			4
branch target addr.:		9
PC (after):			4


				imm[11:5]	rs2	rs1	funct3	imm[4:0]	opcode
Machine instruction:		0000000		00111	00011	111	00101		1100011
Assembly:			bgeu rs1, rs2, imm
Source register (rs2):		x7 = 4294967290
Source register (rs1):		x3 = 6
imm:				5
PC (before):			4
branch target addr.:		9
PC (after):			4
